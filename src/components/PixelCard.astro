---
const { class: className, dataColors, dataGap = 3 } = Astro.props;
---

<div class={`${className} card shadow-md rounded-xl`}>
  <pixel-canvas data-colors={`${dataColors}`} data-gap={`${dataGap}`}
  ></pixel-canvas>
  <slot />
</div>
<script is:inline type="module" src="/src/scripts/pixel-canvas.js"></script>
<style>
  :root {
    --inset-shadow: #397dea44;
    --inner-shadow: #397dea16;
    --surface-1: #397dea13;
    --surface-2: #397dea;
    --surface-3: #4ade80;
    --ease-out: cubic-bezier(0.5, 1, 0.89, 1);
    --ease-in-out: cubic-bezier(0.45, 0, 0.55, 1);
  }

  .card {
    position: relative;
    overflow: hidden;
    display: grid;
    grid-template-areas: "card";
    place-items: center;
    border: 1px solid var(--surface-2);
    isolation: isolate;
    transition: border-color 200ms var(--ease-out);
    user-select: none;

    &::before {
      content: "";
      position: absolute;
      inset: 0;
      background: radial-gradient(
        circle at bottom left,
        transparent 55%,
        var(--surface-1)
      );
      pointer-events: none;
      box-shadow: var(--inner-shadow) inset 0px 0px 50px 0px;
      transition: opacity 900ms var(--ease-out);
    }

    &::after {
      content: "";
      position: absolute;
      inset: 0;
      margin: auto;
      aspect-ratio: 1;
      background: radial-gradient(circle, var(--inner-shadow), transparent 65%);
      opacity: 0;
      transition: opacity 800ms var(--ease-out);
    }

    > * {
      grid-area: card;
    }

    svg {
      position: relative;
      z-index: 1;
      width: 30%;
      color: var(--surface-3);
      transition: 300ms var(--ease-out);
      transition-property: color, scale;
    }

    button {
      opacity: 0;
    }

    &:focus-within {
      outline: 5px auto -webkit-focus-ring-color;
    }

    &:where(:hover, :focus-within) {
      transition: border-color 800ms var(--ease-in-out);
    }

    &:where(:hover, :focus-within) svg {
      scale: 1.1;
      transition: 300ms var(--ease-in-out);
    }

    &:where(:hover, :focus-within)::before {
      opacity: 0;
    }

    &:where(:hover, :focus-within)::after {
      opacity: 1;
    }
  }
</style>
