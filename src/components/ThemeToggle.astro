---
import SunIcon from "./icons/Sun.astro";
import MoonIcon from "./icons/Moon.astro";
const { class: className } = Astro.props;
---

<div class={`${className} relative ml-1 mr-1`}>
  <button
    transition:persist
    id="theme-toggle-btn"
    class="appearance-none border-none flex hover:scale-125 transition"
  >
    <span class="sr-only">Elige el tema</span>
    <SunIcon id="light" class="theme-toggle-icon size-5 transition-all" />
    <MoonIcon
      id="dark"
      class="theme-toggle-icon absolute size-5 transition-all"
    />
  </button>
</div>

<script is:inline>
  const matchMedia = window.matchMedia("(prefers-color-scheme: dark)");
  const themeToggleBtn = document.getElementById("theme-toggle-btn");

  const getTheme = () => localStorage.getItem("theme") || "system";

  const applyTheme = () => {
    const theme = getTheme();
    const isDark =
      theme === "dark" || (theme === "system" && matchMedia.matches);

    document.documentElement.classList.toggle("dark", isDark);
    document.querySelectorAll(".theme-toggle-icon").forEach((el) => {
      el.style.scale = el.id === theme ? "1" : "0";
    });
  };

  themeToggleBtn.addEventListener("click", (e) => {
    const theme = getTheme();
    const isDark =
      theme === "dark" || (theme === "system" && matchMedia.matches);
    e.stopPropagation();
    localStorage.setItem("theme", isDark ? "light" : "dark");
    applyTheme();
  });

  matchMedia.addEventListener("change", applyTheme);
  document.addEventListener("astro:after-swap", applyTheme);
  applyTheme();
</script>
