---
import AngularIcon from "./icons/Angular.astro";
import TypescriptIcon from "./icons/Typescript.astro";
import JavascriptIcon from "./icons/Javascript.astro";
import ReactIcon from "./icons/React.astro";
import GitIcon from "./icons/Git.astro";
import CssIcon from "./icons/Css.astro";
import Card from "./Card.astro";
import MongoDBIcon from "./icons/MongoDB.astro";
import NodeJSIcon from "./icons/NodeJS.astro";

const techItems = [
  {
    id: "react",
    cardClass: "lg:col-span-2 lg:row-span-2",
    icon: ReactIcon,
    descriptionItems: ["Componentización", "Manejo de estado", "Custom hooks"],
  },
  {
    id: "angular",
    cardClass: "lg:row-span-2",
    icon: AngularIcon,
    descriptionItems: ["Modularidad", "Reactive Forms", "Directivas y Pipes"],
  },
  {
    id: "javascript",
    cardClass: "col-span-2",
    icon: JavascriptIcon,
    descriptionItems: [
      "ES6+ Features",
      "Promesas, Async/Await",
      "Closures y Scope",
    ],
  },
  {
    id: "typescript",
    cardClass: "col-span-2",
    icon: TypescriptIcon,
    descriptionItems: [
      "Tipado estático",
      "Interfaces y Genéricos",
      "Decoradores y Modificadores",
    ],
  },
  {
    id: "git",
    cardClass: "",
    icon: GitIcon,
    descriptionItems: ["Git flow", "Rebase vs Merge", "GitHub Actions"],
  },
  {
    id: "nodejs",
    cardClass: "lg:col-span-2",
    icon: NodeJSIcon,
    descriptionItems: ["Express.js", "Manejo de eventos", "Streams y Workers"],
  },
  {
    id: "mongodb",
    cardClass: "",
    icon: MongoDBIcon,
    descriptionItems: [
      "Modelado NoSQL",
      "Consultas avanzadas",
      "Commit y Rollback",
    ],
  },
  {
    id: "css",
    cardClass: "",
    icon: CssIcon,
    descriptionItems: [
      "Flexbox y Grid",
      "Preprocesadores",
      "Diseño responsivo",
    ],
  },
];
---

<div class="flex flex-col gap-y-16">
  <article
    class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0"
  >
    <div class="w-full">
      <div class="grid grid-cols-2 lg:grid-cols-5 gap-3">
        {
          techItems.map((item: any) => (
            <Card class={item.cardClass}>
              <div
                id={item.id}
                class="card-content flex align-middle w-full h-full my-6"
              >
                <div class="flip-card w-full h-20 m-auto">
                  <div class="flip-card-inner">
                    <div class="flip-card-front flex align-middle">
                      <item.icon class="w-16 h-16 m-auto" />
                    </div>
                    <div class="flip-card-back">
                      {item.descriptionItems?.map((description: string) => (
                        <p class="text-gray-700 dark:text-gray-300">
                          {description}
                        </p>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            </Card>
          ))
        }
      </div>
    </div>
  </article>
</div>
<script>
  const ids = [
    "react",
    "angular",
    "javascript",
    "typescript",
    "git",
    "nodejs",
    "mongodb",
    "css",
  ];
  let prevId = "";
  function flipCard() {
    if (prevId) {
      const prevCard = document.getElementById(prevId);
      if (prevCard) {
        prevCard.classList.toggle("flipped");
      }
    }
    let randomId = ids[Math.floor(Math.random() * ids.length)];
    prevId = randomId;
    const card = document.getElementById(randomId);
    if (card) {
      card.classList.toggle("flipped");
    }
  }
  const flipInterval = setInterval(flipCard, 3000);
  window.addEventListener("beforeunload", () => clearInterval(flipInterval));
</script>
<style>
  .flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.3s;
    transform-style: preserve-3d;
  }

  /* Do an horizontal flip when you move the mouse over the flip box container */
  .card-content:hover .flip-card-inner {
    transform: rotateY(180deg);
  }
  .flipped .flip-card-inner {
    transform: rotateY(180deg);
  }

  /* Position the front and back side */
  .flip-card-front,
  .flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden; /* Safari */
    backface-visibility: hidden;
  }

  /* Style the front side (fallback if image is missing) */
  .flip-card-front {
    color: black;
  }

  /* Style the back side */
  .flip-card-back {
    color: white;
    transform: rotateY(180deg);
  }
</style>
